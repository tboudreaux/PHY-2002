Basic Spectral Plotter, Written by Paddy Clancy and Thomas Boudreaux. Developed for PHY-2002 at High Point University, advisor Dr. Brad N. Barlow. 
Basic Opperation:
-------------------
This program has been written to view and analize high resolution spectral data from CHIRON on the SMARTS 1.5 meter telesocpe. If you would like to stack multiple exposures of a target for the same order Press the "Generate Path Files" button (or if you have pressed the button in the past just enter the file name into the "Path List File Name" field) and then enter the file name for the desired target in the "Path List File Name" fileld. Check the "Stack Images" box and then select the number of targets that you would like to stack, or select "all" and all will be stacked. If you do not check "all" you can increase or decrease the number of stacked images once you plot by pressing the 'q' (decrease) or 'e' (increase) keys on your keyboard. If instead you would only like to examin one object enter the file path to that object in the "Single File Name" field. Once you have your file(s) selected you can decide if you would like to normalize your spectra. To Normalize a spectra check "Fit a Function" and then enter the degree polynominal that you would like to fit. If you would like to show the function that was fit as well as the nomralized spectra click the "Show Fit" button. Once you have your settings as you like click on "Plot" Once in the Plot window 'd' will advance to the next order and 'a' will retrete to the previous order.

Pre-run code interpritation:
---------------------
The code displayed in the python terminal, and outputed to the prefun file can be interproted as follows:
1) convert decinmal number to binary value
2) Each charectar of the binary value represents a boolean checked during the Pre-run checks
3) Booleans are as follows:
	1 - jplfind (was the jplephemris module found in your python install)
	2 - jplimport (was the jplephemris module succsesully imported into the program)
	3 - jplinstall (was the jplephemris module installed into your python install)
	4 - de423find (was the de423 module found in your python install)
	5 - de423import (was the de423 module succsesully imported into the program)
	6 - de423install (was the de423 module installed into your python install)
	7 - jdcalfind (was the jdcal module found in your python install)
	8 - jdcalimport (was the jdcal module succsesully imported into the program)
	9 - jdcalinstall (was the jdcal module installed into your python install)
	10 - mac (is your computer running MacOS-X)

Thanks.

